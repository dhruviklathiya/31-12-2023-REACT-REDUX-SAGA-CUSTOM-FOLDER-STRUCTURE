{"ast":null,"code":"const {\n  GET_USER_PROCESS,\n  GET_USER_SUCCESS,\n  GET_USER_ERROR,\n  POST_USER_PROCESS,\n  POST_USER_SUCCESS,\n  POST_USER_ERROR,\n  DELETE_USER_SUCCESS,\n  DELETE_USER_ERROR,\n  DELETE_USER_PROCESS,\n  UPDATE_USER_PROCESS,\n  UPDATE_USER_SUCCESS\n} = require(\"../ACTIONS/user_action\");\nconst initialState = {\n  user_data: [],\n  isLoading: false,\n  isError: null\n};\nexport const user_reducer = (state = initialState, action) => {\n  const data = action.data;\n  switch (action.type) {\n    case GET_USER_PROCESS:\n      {\n        return {\n          ...state,\n          isLoading: true\n        };\n      }\n    case GET_USER_SUCCESS:\n      {\n        // const data = action.data\n        return {\n          ...state,\n          user_data: data\n        };\n      }\n    case GET_USER_ERROR:\n      {\n        return {\n          ...state,\n          isError: true,\n          isLoading: false,\n          data\n        };\n      }\n    case POST_USER_PROCESS:\n      {\n        return {\n          ...state,\n          isLoading: true\n        };\n      }\n    case POST_USER_SUCCESS:\n      {\n        // const data = action.data\n        return {\n          ...state,\n          user_data: state.user_data.concat(data)\n        };\n      }\n    case POST_USER_ERROR:\n      {\n        return {\n          ...state,\n          isError: true,\n          isLoading: false,\n          data\n        };\n      }\n    case DELETE_USER_PROCESS:\n      {\n        return {\n          ...state,\n          isLoading: true\n        };\n      }\n    case DELETE_USER_SUCCESS:\n      {\n        const index = action.index;\n        state.user_data.splice(index, 1);\n        return {\n          ...state\n        };\n      }\n    case DELETE_USER_ERROR:\n      {\n        return {\n          ...state,\n          isError: true,\n          isLoading: false,\n          data\n        };\n      }\n    case UPDATE_USER_PROCESS:\n      {\n        return {\n          ...state,\n          isLoading: true\n        };\n      }\n    case UPDATE_USER_SUCCESS:\n      {\n        const index = action.index;\n        state.user_data.splice(index, 1);\n        return {\n          ...state\n        };\n      }\n    case DELETE_USER_ERROR:\n      {\n        return {\n          ...state,\n          isError: true,\n          isLoading: false,\n          data\n        };\n      }\n    default:\n      return {\n        name: \"Hello\"\n      };\n      break;\n  }\n};","map":{"version":3,"names":["GET_USER_PROCESS","GET_USER_SUCCESS","GET_USER_ERROR","POST_USER_PROCESS","POST_USER_SUCCESS","POST_USER_ERROR","DELETE_USER_SUCCESS","DELETE_USER_ERROR","DELETE_USER_PROCESS","UPDATE_USER_PROCESS","UPDATE_USER_SUCCESS","require","initialState","user_data","isLoading","isError","user_reducer","state","action","data","type","concat","index","splice","name"],"sources":["/Users/dhruviklathiya/Desktop/D CODER/09 React js/Project_practice/31-12-2023-REACT-REDUX-SAGA-CUSTOM-FOLDER-STRUCTURE/src/REDUX-SAGA/REDUCER/user_reducer.js"],"sourcesContent":["const { GET_USER_PROCESS, GET_USER_SUCCESS, GET_USER_ERROR, POST_USER_PROCESS, POST_USER_SUCCESS, POST_USER_ERROR, DELETE_USER_SUCCESS, DELETE_USER_ERROR, DELETE_USER_PROCESS, UPDATE_USER_PROCESS, UPDATE_USER_SUCCESS } = require(\"../ACTIONS/user_action\");\n\nconst initialState = {\n    user_data: [],\n    isLoading: false,\n    isError: null,\n  };\n\n\nexport const user_reducer = (state = initialState, action) => {\n    const data = action.data\n    switch (action.type) {\n        case GET_USER_PROCESS:{\n            return{\n                ...state,\n                isLoading:true,\n            }\n        }\n        case GET_USER_SUCCESS:{\n            // const data = action.data\n            return{\n                ...state,\n                user_data: data\n            }\n        }\n        case GET_USER_ERROR:{\n            return{\n                ...state,\n                isError:true,\n                isLoading:false,\n                data\n            }\n        }\n        case POST_USER_PROCESS:{\n            return{\n                ...state,\n                isLoading:true,\n            }\n        }\n        case POST_USER_SUCCESS:{\n            // const data = action.data\n            return{\n                ...state,\n                user_data: state.user_data.concat(data)\n            }\n        }\n        case POST_USER_ERROR:{\n            return{\n                ...state,\n                isError:true,\n                isLoading:false,\n                data\n            }\n        }\n        case DELETE_USER_PROCESS:{\n            return{\n                ...state,\n                isLoading:true,\n            }\n        }\n        case DELETE_USER_SUCCESS:{\n            const index = action.index\n            state.user_data.splice(index,1)\n            return{\n                ...state,\n            }\n        }\n        case DELETE_USER_ERROR:{\n            return{\n                ...state,\n                isError:true,\n                isLoading:false,\n                data\n            }\n        }\n        case UPDATE_USER_PROCESS:{\n            return{\n                ...state,\n                isLoading:true,\n            }\n        }\n        case UPDATE_USER_SUCCESS:{\n            const index = action.index\n            state.user_data.splice(index,1)\n            return{\n                ...state,\n            }\n        }\n        case DELETE_USER_ERROR:{\n            return{\n                ...state,\n                isError:true,\n                isLoading:false,\n                data\n            }\n        }\n        default:\n            return({\n                name:\"Hello\"\n            })\n            break;\n    }\n}"],"mappings":"AAAA,MAAM;EAAEA,gBAAgB;EAAEC,gBAAgB;EAAEC,cAAc;EAAEC,iBAAiB;EAAEC,iBAAiB;EAAEC,eAAe;EAAEC,mBAAmB;EAAEC,iBAAiB;EAAEC,mBAAmB;EAAEC,mBAAmB;EAAEC;AAAoB,CAAC,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AAE9P,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAE,EAAE;EACbC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE;AACX,CAAC;AAGH,OAAO,MAAMC,YAAY,GAAGA,CAACC,KAAK,GAAGL,YAAY,EAAEM,MAAM,KAAK;EAC1D,MAAMC,IAAI,GAAGD,MAAM,CAACC,IAAI;EACxB,QAAQD,MAAM,CAACE,IAAI;IACf,KAAKpB,gBAAgB;MAAC;QAClB,OAAM;UACF,GAAGiB,KAAK;UACRH,SAAS,EAAC;QACd,CAAC;MACL;IACA,KAAKb,gBAAgB;MAAC;QAClB;QACA,OAAM;UACF,GAAGgB,KAAK;UACRJ,SAAS,EAAEM;QACf,CAAC;MACL;IACA,KAAKjB,cAAc;MAAC;QAChB,OAAM;UACF,GAAGe,KAAK;UACRF,OAAO,EAAC,IAAI;UACZD,SAAS,EAAC,KAAK;UACfK;QACJ,CAAC;MACL;IACA,KAAKhB,iBAAiB;MAAC;QACnB,OAAM;UACF,GAAGc,KAAK;UACRH,SAAS,EAAC;QACd,CAAC;MACL;IACA,KAAKV,iBAAiB;MAAC;QACnB;QACA,OAAM;UACF,GAAGa,KAAK;UACRJ,SAAS,EAAEI,KAAK,CAACJ,SAAS,CAACQ,MAAM,CAACF,IAAI;QAC1C,CAAC;MACL;IACA,KAAKd,eAAe;MAAC;QACjB,OAAM;UACF,GAAGY,KAAK;UACRF,OAAO,EAAC,IAAI;UACZD,SAAS,EAAC,KAAK;UACfK;QACJ,CAAC;MACL;IACA,KAAKX,mBAAmB;MAAC;QACrB,OAAM;UACF,GAAGS,KAAK;UACRH,SAAS,EAAC;QACd,CAAC;MACL;IACA,KAAKR,mBAAmB;MAAC;QACrB,MAAMgB,KAAK,GAAGJ,MAAM,CAACI,KAAK;QAC1BL,KAAK,CAACJ,SAAS,CAACU,MAAM,CAACD,KAAK,EAAC,CAAC,CAAC;QAC/B,OAAM;UACF,GAAGL;QACP,CAAC;MACL;IACA,KAAKV,iBAAiB;MAAC;QACnB,OAAM;UACF,GAAGU,KAAK;UACRF,OAAO,EAAC,IAAI;UACZD,SAAS,EAAC,KAAK;UACfK;QACJ,CAAC;MACL;IACA,KAAKV,mBAAmB;MAAC;QACrB,OAAM;UACF,GAAGQ,KAAK;UACRH,SAAS,EAAC;QACd,CAAC;MACL;IACA,KAAKJ,mBAAmB;MAAC;QACrB,MAAMY,KAAK,GAAGJ,MAAM,CAACI,KAAK;QAC1BL,KAAK,CAACJ,SAAS,CAACU,MAAM,CAACD,KAAK,EAAC,CAAC,CAAC;QAC/B,OAAM;UACF,GAAGL;QACP,CAAC;MACL;IACA,KAAKV,iBAAiB;MAAC;QACnB,OAAM;UACF,GAAGU,KAAK;UACRF,OAAO,EAAC,IAAI;UACZD,SAAS,EAAC,KAAK;UACfK;QACJ,CAAC;MACL;IACA;MACI,OAAO;QACHK,IAAI,EAAC;MACT,CAAC;MACD;EACR;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}